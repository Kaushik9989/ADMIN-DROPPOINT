<% layout("/layouts/boilerplate") %>

<body class="bg-light min-vh-100">
  <!-- Main Map Section -->
  <div class="container-fluid py-5">
    <div class="row justify-content-center">
      <div class="col-lg-10">
        <h2 class="fw-bold text-center mb-4">üìç Nearest Lockers</h2>
        <div id="locker-map" class="rounded shadow" style="height: 450px;"></div>
      </div>
    </div>
  </div>

  <!-- Slide-In Locker Info Drawer -->
  <div id="locker-info-drawer" class="position-fixed top-0 end-0 bg-white shadow-lg p-4"
    style="width: 320px; height: 100%; z-index: 1050; transform: translateX(100%); transition: transform 0.3s ease-in-out;">
    <div class="d-flex justify-content-between align-items-center mb-3 border-bottom pb-2">
      <h5 class="mb-0 fw-semibold">Locker Details</h5>
      <button class="btn btn-sm btn-outline-secondary" onclick="closeLockerInfo()">‚úñ</button>
    </div>
    <div id="locker-info-content" class="text-start small"></div>
  </div>

  <!-- Action Cards Section -->
  <div class="container mt-5 pt-4">
    <h2 class="fw-bold text-center mb-3">üöÄ Welcome to DropPoint</h2>
    <p class="text-center lead text-muted mb-4">Choose your action to get started</p>

    <div class="row justify-content-center">
      <div class="col-md-3 mb-4">
        <a href="/user/pickup" class="text-decoration-none">
          <div class="card h-100 shadow-sm border-0 text-center hover-scale">
            <div class="card-body py-4">
              <i class="fas fa-box-open fa-3x text-primary mb-3"></i>
              <h5 class="card-title fw-semibold">Pickup</h5>
            </div>
          </div>
        </a>
      </div>
      <div class="col-md-3 mb-4">
        <a href="/user/dropoff" class="text-decoration-none">
          <div class="card h-100 shadow-sm border-0 text-center hover-scale">
            <div class="card-body py-4">
              <i class="fas fa-box fa-3x text-success mb-3"></i>
              <h5 class="card-title fw-semibold">Drop-off</h5>
            </div>
          </div>
        </a>
      </div>
    </div>
  </div>

  <!-- Bootstrap + Font Awesome -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
  <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

  <!-- Leaflet -->
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

  <!-- Locker Map Script -->
  <script>
    const lockers = <%- JSON.stringify(lockers) %>;
    const map = L.map('locker-map').setView([20.5937, 78.9629], 5);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { maxZoom: 18 }).addTo(map);

    navigator.geolocation.getCurrentPosition(success, error);

    function success(position) {
      const userLat = position.coords.latitude;
      const userLng = position.coords.longitude;

      const userIcon = L.icon({
        iconUrl: "https://cdn-icons-png.flaticon.com/512/1946/1946429.png",
        iconSize: [35, 35],
        iconAnchor: [17, 34],
        popupAnchor: [0, -30],
      });

      const userMarker = L.marker([userLat, userLng], { icon: userIcon })
        .addTo(map)
        .bindPopup("üìç You are here, click to view profile")
        .openPopup();

      userMarker.on("click", () => {
        window.location.href = "/profile";
      });

      map.setView([userLat, userLng], 14);
      showNearestLockers(userLat, userLng);
    }

    function error(err) {
      console.error("Geolocation error:", err.message);
      alert("Could not get your location.");
      map.setView([20.5937, 78.9629], 5);
    }

    function showNearestLockers(userLat, userLng) {
      const radiusInKm = 80;

      lockers.forEach(locker => {
        if (locker.location.lat && locker.location.lng) {
          const lat = locker.location.lat;
          const lng = locker.location.lng;
          const distance = getDistanceFromLatLonInKm(userLat, userLng, lat, lng);

          if (distance <= radiusInKm) {
            const total = locker.compartments.length;
            const available = locker.compartments.filter(c => !c.isBooked).length;

            const marker = L.marker([lat, lng]).addTo(map);
            marker.on("click", () => {
              const content = `
                <p><strong>Locker ID:</strong> ${locker.lockerId}</p>
                <p><strong>Address:</strong> ${locker.location.address || "Not Available"}</p>
                <p><strong>Total Compartments:</strong> ${total}</p>
                <p><strong>Available:</strong> ${available}</p>
                <a href="/locker/${locker.lockerId}" class="btn btn-sm btn-primary w-100 my-2">üì¶ Go to Locker</a>
                <a href="https://www.google.com/maps/dir/?api=1&destination=${lat},${lng}" target="_blank" class="btn btn-sm btn-outline-success w-100">üìç Get Directions</a>
              `;
              document.getElementById("locker-info-content").innerHTML = content;
              openLockerInfo();
            });
          }
        }
      });
    }

    function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {
      const R = 6371;
      const dLat = deg2rad(lat2 - lat1);
      const dLon = deg2rad(lon2 - lon1);
      const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
        Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
        Math.sin(dLon / 2) * Math.sin(dLon / 2);
      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
      return R * c;
    }

    function deg2rad(deg) {
      return deg * (Math.PI / 180);
    }

    function openLockerInfo() {
      document.getElementById("locker-info-drawer").style.transform = "translateX(0)";
    }

    function closeLockerInfo() {
      document.getElementById("locker-info-drawer").style.transform = "translateX(100%)";
    }
  </script>

  <!-- Optional hover scale effect -->
  <style>
    .hover-scale:hover {
      transform: scale(1.05);
      transition: 0.3s ease;
    }
  </style>
</body>
